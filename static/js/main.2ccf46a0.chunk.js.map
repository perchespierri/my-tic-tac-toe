{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","calculateWinner.js","index.js"],"names":["Square","value","onClickSquare","style","className","onClick","Board","squares","onClickBoard","map","square","index","Game","nullArray","Array","fill","useState","history","setHistory","stepNumber","setStepNumber","xIsNext","setXisNext","winner","winningLines","i","length","a","b","c","calculateWinner","showXorO","historyPoint","slice","current","_step","move","destination","step","ReactDOM","render","document","getElementById"],"mappings":"qMAWeA,EATA,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,cACjBC,EAAQF,EAAK,kBAAcA,GAAU,UAC3C,OACE,wBAAQG,UAAWD,EAAOE,QAASH,EAAnC,SACGD,KCWQK,EAdD,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,aACxB,OACE,qBAAKJ,UAAU,QAAf,SACGG,EAAQE,KAAI,SAACC,EAAQC,GAAT,OACX,cAAC,EAAD,CAEEV,MAAOS,EACPR,cAAe,kBAAMM,EAAaG,KAF7BA,SCJf,IA8DeC,EA9DF,WACX,IAAMC,EAAY,CAACC,MAAM,GAAGC,KAAK,OADhB,EAEaC,mBAASH,GAFtB,mBAEVI,EAFU,KAEDC,EAFC,OAGmBF,mBAAS,GAH5B,mBAGVG,EAHU,KAGEC,EAHF,OAIaJ,oBAAS,GAJtB,mBAIVK,EAJU,KAIDC,EAJC,KAKXC,ECTD,SAAyBhB,GAW9B,IAVA,IAAMiB,EAAe,CACnB,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAC,EAAI,EAAGA,EAAID,EAAaE,OAAQD,IAAK,CAAC,IAAD,cAC1BD,EAAaC,GADa,GACrCE,EADqC,KAClCC,EADkC,KAC/BC,EAD+B,KAE5C,GAAGtB,EAAQoB,IAAMpB,EAAQoB,KAAOpB,EAAQqB,IAAMrB,EAAQoB,KAAOpB,EAAQsB,GACnE,OAAOtB,EAAQoB,GAGnB,OAAO,KDRQG,CAAgBb,EAAQE,IACjCY,EAAWV,EAAU,IAAM,IAoCjC,OACE,qCACE,6DACA,cAAC,EAAD,CAAOd,QAASU,EAAQE,GAAaX,aArCrB,SAACG,GAEnB,IAAMqB,EAAef,EAAQgB,MAAM,EAAGd,EAAa,GAC7Ce,EAAUF,EAAab,GACvBZ,EAAO,YAAO2B,GAEhBX,GAAUhB,EAAQI,KAEtBJ,EAAQI,GAASoB,EACjBb,EAAW,GAAD,mBAAKc,GAAL,CAAmBzB,KAC7Ba,EAAcY,EAAaN,QAC3BJ,GAAYD,OA2BV,sBAAKjB,UAAU,eAAf,UACE,gCACE,yCApBNa,EAAQR,KAAI,SAAC0B,EAAOC,GAClB,IAAMC,EAAcD,EAAI,sBACLA,GACf,cACJ,OACE,6BACE,wBAAQ/B,QAAS,kBAXvBe,EADckB,EAYsBF,QAVpCd,EAAWgB,EAAO,IAAM,GAFX,IAACA,GAYR,SACGD,KAFID,SAkBT,6BACGb,EAAM,kBACQA,GADR,uBAEaQ,YErD9BQ,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.2ccf46a0.chunk.js","sourcesContent":["import React from 'react'\n\nconst Square = ({ value, onClickSquare }) => {\n  const style = value ? `squares ${value}` : 'squares';\n  return (\n    <button className={style} onClick={onClickSquare}>\n      {value}\n    </button>\n  )\n}\n\nexport default Square;\n","import React from 'react';\nimport Square from './Square';\n\nconst Board = ({ squares, onClickBoard }) => {\n  return (\n    <div className=\"board\">\n      {squares.map((square, index) => (\n        <Square\n          key={index}\n          value={square} \n          onClickSquare={() => onClickBoard(index)}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default Board;\n","import React, { useState } from 'react';\nimport Board from './Board';\nimport { calculateWinner } from '../calculateWinner';\n\nconst Game = () => {\n  const nullArray = [Array(9).fill(null)];\n  const [history, setHistory] = useState(nullArray)\n  const [stepNumber, setStepNumber] = useState(0);\n  const [xIsNext, setXisNext] = useState(true);\n  const winner = calculateWinner(history[stepNumber]);\n  const showXorO = xIsNext ? 'X' : 'O';\n\n  const handleClick = (index) => { \n    // onClickBoard and onClickSquare\n    const historyPoint = history.slice(0, stepNumber + 1);\n    const current = historyPoint[stepNumber];\n    const squares = [...current];\n    // return if won or occupied\n    if (winner || squares[index]) return;\n    // select square\n    squares[index] = showXorO;\n    setHistory([...historyPoint, squares]);\n    setStepNumber(historyPoint.length);\n    setXisNext(!xIsNext);\n  };\n\n  const jumpTo = (step) => {\n    setStepNumber(step);\n    setXisNext(step % 2 === 0);\n  }\n\n  const renderMoves = () => (\n    history.map((_step, move) => {\n      const destination = move\n        ? `Go to move #${move}`\n        : \"Go to start\";\n      return (\n        <li key={move}>\n          <button onClick={() => jumpTo(move)}>\n            {destination}\n          </button>\n        </li>\n      )\n    })\n  )\n\n  return (\n    <>\n      <h1>Tic-Tac-Toe made with Hooks</h1>\n      <Board squares={history[stepNumber]} onClickBoard={handleClick} />\n      <div className=\"info-wrapper\">\n        <div>  \n          <h3>History</h3>\n          {renderMoves()}\n        </div>  \n        <h3>\n          {winner\n            ? `Winner: ${winner}`\n            : `Next player: ${showXorO}`\n          }\n        </h3>\n      </div>\n    </>\n  );\n};\n\nexport default Game;\n","export function calculateWinner(squares) {\n  const winningLines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < winningLines.length; i++) {\n    const [a, b, c] = winningLines[i];\n    if(squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './components/Game';\n\nReactDOM.render(\n    <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}